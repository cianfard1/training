- name: check if kafka is already installed--dobt work
  shell: /opt/kafka/bin/kafka-topics.sh --version | awk '{ print $1 }'
  register: KafkaVersion  
  ignore_errors: True
- debug: var=KafkaVersion

- block:   
   - name: download package
     get_url: 
       url: https://archive.apache.org/dist/kafka/2.2.0/kafka_2.12-2.2.0.tgz
       dest: /opt
   - name: create kafka directory 
     file: 
       path: /opt/kafka
       state: directory 

   - name: untar package
     unarchive:
      src: /opt/kafka_2.12-2.2.0.tgz
      dest: /opt/kafka
      remote_src: yes
      extra_opts: [--strip-components=1]

   - name: remove tar file
     file:
       path: /opt/kafka_2.12-2.2.0.tgz
       state: absent

  when: KafkaVersion !='2.2.0'

- name: copy zookeeper
  copy: 
    src: zookeeper
    dest: /etc/init.d/zookeeper
    owner: root 
    mode: u=rxw,g=r,o=r

- name: update zookeeper
  shell: 'update-rc.d zookeeper defaults'

- name: copy kafka
  copy: 
    src: kafka
    dest: /etc/init.d/kafka
    owner: root 
    mode: u=rxw,g=r,o=r

- name: update kafka
  shell: 'update-rc.d kafka defaults'

- name: create kafka directory
  file:
    path: /data/kafka
    state: directory

- name: remove server.properties file
  file:
    path: /opt/kafka/config/server.properties
    state: absent    

- name: kafka configuration file    
  template:
    src: server.properties.j2
    dest: /opt/kafka/config/server.properties
      
- name: copy remote
  lineinfile:
    dest: /etc/hosts
    line: "{{item}}"
  with_lines: cat /tmp/hosts  

- name: Create the logs Directory and myid File for the Zookeeper Service
  file: 
    path: /data/zookeeper
    state: directory
 
- name: create zookeeper file-- it should create 1 number per file host
  template:
    src: myid.j2
    dest: /data/zookeeper/myid

- name: Create the zookeeper.properties File
  copy:
    src: zookeeper.properties
    dest: /opt/kafka/config/zookeeper.properties

    
- name: start zookeeper
  service:
    name: zookeeper
    state: started

- name: start kafka
  service:
    name: kafka
    state: started